var searchIndex = JSON.parse('{\
"version_tag":{"doc":"A VersionTag struct for Rust to detect changes","t":[3,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["VersionTag","borrow","borrow_mut","clone","clone_into","cmp","combine","default","eq","fmt","from","hash","into","ne","new","notify","partial_cmp","to_owned","try_from","try_into","type_id","zero"],"q":["version_tag","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","compute a new VersionTag by using the max value of other …","Creates an initialized new VersionTag. This is the same …","","","","","","","Creates an initialized new VersionTag.","Internally increment the counter of the tag to signal a …","","","","","","Creates a version 0 which could indicate that the …"],"i":[0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["versiontag",3]],[[]],[[["versiontag",3]],["ordering",4]],[[],["versiontag",3]],[[]],[[["versiontag",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["versiontag",3]],["bool",15]],[[]],[[]],[[["versiontag",3]],[["option",4],["ordering",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"VersionTag"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};